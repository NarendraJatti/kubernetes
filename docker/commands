docker run ubuntu expr 3 + 2
/var/lib/docker >>storage>>volumes,contaienrs etc 
docker volume create data_vol
docker run -v data_vol:/var/lib/mysql mysql (witout creating vol,docker still created volume during run)

sudo lsof -i :8080
docker volume
============
storage drivers 
volume drivers 
1) volume mount>>var/lib/docker/volume
2)bind mount >>differnt location 
docker run -v /data/mysql:/var/lib/mysql mysql
or 
docker run --mount type=bind,source=/data/mysql,target=/var/lib/mysql mysql 

docker run -it image:v1 sh
sudo journalctl -u docker.service


Inspect the Docker Image: To inspect the code of the httpbin service, you can explore the running container by using Docker's exec command or extract the files from the image.

Option 1: Access the running container: First, list your running containers to get the container ID:

bash
Copy
Edit
docker ps
Once you have the container ID, use the exec command to access the container:

bash
Copy
Edit
docker exec -it <container-id> /bin/sh
Now you're inside the container and can inspect its file system. The code for httpbin is usually located in the /usr/src/app directory.

Option 2: Inspect image layers without running the container: You can use docker create to create a container and inspect the layers:

bash
Copy
Edit
docker create --name httpbin-container kennethreitz/httpbin
Then, export the filesystem:

bash
Copy
Edit
docker export httpbin-container > httpbin.tar
After exporting, you can extract the httpbin.tar file to inspect the code on your local machine:

bash
Copy
Edit
tar -xvf httpbin.tar
Find /status and /delay Endpoints in the Code: The httpbin service is a Python Flask application. Once you're inside the container or have extracted the filesystem, you can inspect the source code to find how the /status and /delay endpoints are implemented.

Look for Python files under /usr/src/app/. The endpoints are defined in the Flask routes.
For example, inside the main file (likely app.py or httpbin.py), you should find definitions for /status and /delay using Flask route decorators like:
python
Copy
Edit
@app.route('/status/<int:code>', methods=['GET'])
@app.route('/delay/<int:seconds>', methods=['GET'])
Stop the Running Container (Optional): After you're done, you can stop and remove the running container:

bash
Copy
Edit
docker stop <container-id>
docker rm <container-id>